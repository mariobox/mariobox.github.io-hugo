<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Mario Sanchez Carrion</title>
    <link>http://www.mariosanchez.org/tags/tech/</link>
    <description>Recent content in Tech on Mario Sanchez Carrion</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Dec 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.mariosanchez.org/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to Create an Minimal Metalsmith Blog</title>
      <link>http://www.mariosanchez.org/post/metalsmith/</link>
      <pubDate>Sun, 11 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.mariosanchez.org/post/metalsmith/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been experimenting with &lt;a href=&#34;http://staticsitegenerators.net&#34;&gt;static site generators&lt;/a&gt; for a few months now. I first started with Ruby-based &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, before settling for Go-based &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, which is what I&amp;rsquo;m using now to run this site. What I like about Hubo is its simplicity, its many blog-friendly features (like tags and pagination), and the fact that it has a very robust documentation, which is key for relative newcomers like me.&lt;/p&gt;

&lt;p&gt;Lately, however, I have been hearing good things about JavaScript and &lt;a href=&#34;http://nodejs.org&#34;&gt;Node.js&lt;/a&gt; (the ability to run JavaScript in your computer, not just the browser). I searched around for a tutorial to build a basic blog in &lt;a href=&#34;http://www.metalsmith.io/&#34;&gt;Metalsmith&lt;/a&gt;, an increasingly popular static site generator built with JavaScript. If you want to build a basic Metalsmith site there is no better place to start than this &lt;a href=&#34;https://www.neustadt.fr/essays/crafting-a-simple-blog-with-metalsmith/&#34;&gt;Metalsmith tutorial&lt;/a&gt; by &lt;a href=&#34;http://www.neustadt.fr/&#34;&gt;Parimal Satyal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am not going to repeat the instuctions here because you will be better off just checking out the &lt;a href=&#34;https://www.neustadt.fr/essays/crafting-a-simple-blog-with-metalsmith/&#34;&gt;tutorial&lt;/a&gt;. I am just going to summarize the main steps here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download &lt;a href=&#34;http://nodejs.org&#34;&gt;Node.js and npm&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create and navigate to a directory for your project.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;src&lt;/code&gt; folder, where all your content and templates are going to be.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;package.json&lt;/code&gt; where the meta information about your site is going to be.&lt;/li&gt;
&lt;li&gt;Download and install &lt;a href=&#34;http://www.metalsmith.io/&#34;&gt;Metalsmith&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;build.js&lt;/code&gt; file, where the flow of instructions to create your site are going to be.&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;package.json&lt;/code&gt; to &amp;ldquo;tell&amp;rdquo; it to run &lt;code&gt;build.js&lt;/code&gt; every time Metalsmith is run.&lt;/li&gt;
&lt;li&gt;Test run your installation by typing &lt;code&gt;npm start&lt;/code&gt; from the command line.&lt;/li&gt;
&lt;li&gt;If everything is OK at this point, download all the Metalsmith modules you need, one by one, updating your &lt;code&gt;build.js&lt;/code&gt; each time, to add them to the build flow.&lt;/li&gt;
&lt;li&gt;Create some templates and place them in a folder named &lt;code&gt;/layouts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Write some blog posts.&lt;/li&gt;
&lt;li&gt;Run Metalsmith by typing: &lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;localhost:8082&lt;/code&gt; in your browser, and you should see your site there!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Aside from the instructions in the tutorial, I threw in a link to &lt;a href=&#34;http://getbootstrap.com&#34;&gt;Bootstrap&lt;/a&gt; to give the files some minimal styling.
Don&amp;rsquo;t try to follow the instructions above; they are just notes-to-self to remember the basic steps to create the site. Go to the &lt;a href=&#34;https://www.neustadt.fr/essays/crafting-a-simple-blog-with-metalsmith/&#34;&gt;tutorial&lt;/a&gt; instead, and follow the instructions carefully.&lt;/p&gt;

&lt;p&gt;I have placed the &lt;a href=&#34;https://github.com/mariobox/MinimalMetalsmithBlog&#34;&gt;source files&lt;/a&gt; of my newly created Minimal Metalsmith Blog in &lt;a href=&#34;https://github.com/mariobox/MinimalMetalsmithBlog&#34;&gt;Github&lt;/a&gt;. You can also see a &lt;a href=&#34;http://www.mariosanchez.org/MiniMetalDemo/&#34;&gt;Live Demo here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Create an Alias for the Command Line</title>
      <link>http://www.mariosanchez.org/post/alias/</link>
      <pubDate>Wed, 23 Nov 2016 15:19:11 -0500</pubDate>
      
      <guid>http://www.mariosanchez.org/post/alias/</guid>
      <description>&lt;p&gt;If you use a Linux-style terminal you may find yourself typing the same commands over and over again. If this is the case, you may wish to use some shorthand that the terminal can understand. You can do that with Aliases.&lt;/p&gt;

&lt;p&gt;You start by going to your user directory and opening your &lt;code&gt;.bashrc&lt;/code&gt; file. A &lt;code&gt;.bashrc&lt;/code&gt; is a shell script that &lt;a href=&#34;https://en.wikipedia.org/wiki/Bash_(Unix_shell)&#34;&gt;Bash&lt;/a&gt; runs whenever it is started interactively. You can put any command in that file that you could type at the command prompt.&lt;/p&gt;

&lt;p&gt;In my case, I wanted to avoid having to type &amp;ldquo;git push origin master&amp;rdquo; every time I wanted to commit changes to my remote repository, so I appended the following line of code to my &lt;code&gt;.bashrc&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;alias gpom=&amp;lsquo;git push origin master&amp;rsquo;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and saved the file.&lt;/p&gt;

&lt;p&gt;Now, whenever I have something to commit I just type: &amp;lsquo;gpom&amp;rsquo; and press enter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: In order for the new alias to work you have to reboot your computer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building a SPA with Angular.js</title>
      <link>http://www.mariosanchez.org/post/angularspa/</link>
      <pubDate>Tue, 02 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.mariosanchez.org/post/angularspa/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://www.mariosanchez.org/images/angularjs.png&#34; class=&#34;profile&#34;&gt;A few weeks ago I came across the concept of SPA, or &lt;a href=&#34;https://en.wikipedia.org/wiki/Single-page_application&#34;&gt;Single Page Application&lt;/a&gt;, and learned that they can be created with &lt;a href=&#34;https://angularjs.org/&#34;&gt;Angular.js&lt;/a&gt;, a JavaScript library supported by Google.&lt;/p&gt;

&lt;p&gt;Most definitions of SPA you can find online are very technical and full of jargon, so perhaps the best way a newbie web developer like me can understand it is with an example:&lt;/p&gt;

&lt;p&gt;Suppose you have an &lt;code&gt;index.html&lt;/code&gt; web page with three different sections:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The header (where the navigation menu is)&lt;/li&gt;
&lt;li&gt;The content area, and&lt;/li&gt;
&lt;li&gt;The footer.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The header and the footer remain the same all over the website, so the only thing that really changes when you go from the &lt;code&gt;index.html&lt;/code&gt; page to, say, the &lt;code&gt;about.html&lt;/code&gt; page is the actual page content.&lt;/p&gt;

&lt;p&gt;What a SPA does is to allow the header and the footer to stay right where they are, while it calls only the actual content of the &lt;code&gt;about.html&lt;/code&gt; page and sticks it right between the header and the footer. No new page is loaded (that&amp;rsquo;s where the &amp;ldquo;Single Page&amp;rdquo; part of Single Page Application comes from).&lt;/p&gt;

&lt;p&gt;The switch between the content of your &lt;code&gt;index.html&lt;/code&gt; and your &lt;code&gt;about.html&lt;/code&gt; page is done on the fly by the browser of the person viewing your site, by following the &lt;strong&gt;Angular.js&lt;/strong&gt; directives embedded in the page code.&lt;/p&gt;

&lt;p&gt;I wanted to test building a SPA by creating a barebones, basic brochure site, using &lt;strong&gt;Angular.js&lt;/strong&gt; to generate four page views: Home, About, Contact and Resume.&lt;/p&gt;

&lt;p&gt;I found an &lt;a href=&#34;https://www.airpair.com/angularjs/building-angularjs-app-tutorial&#34;&gt;excellent tutorial&lt;/a&gt; online. After reading it carefully several times I started by creating the index template, which contains the Angular directives to make the site work, and which acts as a template for the whole site.&lt;/p&gt;

&lt;p&gt;I then created bare-bones html files for the other three pages of the site: About, Contact and Resume (nothing fancy, just a couple of &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tags and a paragraph).&lt;/p&gt;

&lt;p&gt;Finally, I tweaked the &lt;strong&gt;main.js&lt;/strong&gt; file to refer to my four pages: &lt;code&gt;/home&lt;/code&gt;, &lt;code&gt;/contact&lt;/code&gt;, &lt;code&gt;/about&lt;/code&gt;, and &lt;code&gt;/resume&lt;/code&gt;, instead of all the different pages listed in the tutorial (which uses a bloated website template that I decided not to follow, for simplicity&amp;rsquo;s sake. I also didn&amp;rsquo;t use the Bootstrap style sheets suggested by the author, opting instead for a much simpler style sheet based on &lt;a href=&#34;http://getskeleton.com&#34;&gt;Skeleton&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;main.js&lt;/strong&gt; file is where the real magic happens: it contains the Routes, which are basically the instructions that &lt;strong&gt;Angular.js&lt;/strong&gt; gives the browser: &amp;ldquo;if user clicks on &lt;code&gt;/about&lt;/code&gt; do this; if user clicks on &lt;code&gt;/contact&lt;/code&gt; do that&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;If you want to try it yourself I recommend that you read and follow the &lt;a href=&#34;https://www.airpair.com/angularjs/building-angularjs-app-tutorial&#34;&gt;tutorial&lt;/a&gt;. The author is obviously a very capable programmer and can explain things much better than I can.&lt;/p&gt;

&lt;p&gt;You can also clone the site I created. Here is the Github repo: &lt;a href=&#34;http://github.com/mariobox/angulartestsite/&#34;&gt;http://github.com/mariobox/angulartestsite&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have also created a &lt;a href=&#34;http://mariobox.github.io/angulartestsite&#34;&gt;Live Demo&lt;/a&gt; so you can try it out on your browser.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The 9 Principles</title>
      <link>http://www.mariosanchez.org/post/principles/</link>
      <pubDate>Thu, 14 Jul 2016 21:10:53 -0400</pubDate>
      
      <guid>http://www.mariosanchez.org/post/principles/</guid>
      <description>&lt;p&gt;I found this slide in a meeting room at &lt;a href=&#34;http://www.theideacenter.co&#34;&gt;The Idea Center&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://67.media.tumblr.com/2310dd5921f5742e43873efe4187ac86/tumblr_oac1a49Eqv1qz7ur9o1_1280.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;The principles, succinctly listed on the page, resonated immediately so I took a picture of the slide. Later, when I got home, I Googled them and found the source: Joi Ito, director of MIT&amp;rsquo;s Media Lab &lt;a href=&#34;https://www.media.mit.edu/about/principles&#34;&gt;wrote them in 2012&lt;/a&gt; as he distilled the mental models required to succeed in the new world of work brought upon us by technology and the internet.&lt;/p&gt;

&lt;p&gt;You can &lt;a href=&#34;http://www.inktalks.com/discover/287/joichi-ito-mit-media-lab-from-a-container-to-a-network&#34;&gt;watch Ito&amp;rsquo;s presentation&lt;/a&gt; where he explains in more detail each one of them.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m just going to list them here as a note-to-self for future reference:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Resilience Over Strength&lt;/li&gt;
&lt;li&gt;Systems Over Objects&lt;/li&gt;
&lt;li&gt;Disobedience Over Compliance&lt;/li&gt;
&lt;li&gt;Pull Over Push&lt;/li&gt;
&lt;li&gt;Compasses Over Maps&lt;/li&gt;
&lt;li&gt;Emergence Over Authority&lt;/li&gt;
&lt;li&gt;Risk Over Safety&lt;/li&gt;
&lt;li&gt;Practice Over Theory&lt;/li&gt;
&lt;li&gt;Learning Over Education&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>7 Useful Habits for the Digital Age</title>
      <link>http://www.mariosanchez.org/post/7newhabits/</link>
      <pubDate>Mon, 30 May 2016 11:17:25 -0400</pubDate>
      
      <guid>http://www.mariosanchez.org/post/7newhabits/</guid>
      <description>

&lt;p&gt;Stephen Covey wrote &lt;a href=&#34;http://amzn.to/1THjXoz&#34;&gt;7 Habits Of Highly Effective People&lt;/a&gt; in 1989. Since then, many authors have expanded the conversation by adding their own seven habits for success, effectiveness, happiness or whatever end goal they may be pursuing.&lt;/p&gt;

&lt;p&gt;In the next few paragraphs, I will distill the seven most important habits that, in my opinion, are esential to successfully navigate the waters of the digital age.&lt;/p&gt;

&lt;h3 id=&#34;1-know-what-you-want:b6c7a23b65051c4e5f37e9bb19ff35d1&#34;&gt;1. Know What You Want&lt;/h3&gt;

&lt;p&gt;This sounds easy but, more often than not, people &lt;a href=&#34;http://www.mariosanchez.org/post/axe/&#34;&gt;don&amp;rsquo;t know what they want&lt;/a&gt;. Passion or purpose is not something that hits us in the head while we&amp;rsquo;re sitting down waiting for it. &lt;strong&gt;We need to get out and find it&lt;/strong&gt;. The best way is to try many different things (go wide) until something sticks. It must be something that you wouldn&amp;rsquo;t mind doing even if it doesn&amp;rsquo;t bring you money. Once you find it, you then need to focus (go deep), learn everything you can, and strive to &lt;a href=&#34;http://amzn.to/1XHLESW&#34;&gt;become the best&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;2-be-different:b6c7a23b65051c4e5f37e9bb19ff35d1&#34;&gt;2. Be Different&lt;/h3&gt;

&lt;p&gt;You have to find your &lt;a href=&#34;http://www.fastcompany.com/28905/brand-called-you&#34;&gt;personal brand&lt;/a&gt;. Merely being competent or very good is not enough. You need to be different. Find the quality or qualities that make you different than your peers and competitors. You can be the details guy, or the people-person gal, or the guy who is always trying out new things, but by all means find something that makes you stand out. &lt;strong&gt;Approach your craft from an angle that others can&amp;rsquo;t or won&amp;rsquo;t&lt;/strong&gt;. Narrow your niche as much as you profitably can so that you can claim the top spot.  Seth Godin wrote about this more than a decade ago in &lt;a href=&#34;http://amzn.to/1Vpd5ki&#34;&gt;Purple Cow&lt;/a&gt;. If you haven&amp;rsquo;t read it, pick it up. It&amp;rsquo;s a short read and well worth it.&lt;/p&gt;

&lt;h3 id=&#34;3-spend-less-than-you-make:b6c7a23b65051c4e5f37e9bb19ff35d1&#34;&gt;3. Spend Less Than You Make&lt;/h3&gt;

&lt;p&gt;Nothing will widen the gap between you and your dreams more than debt. Avoid it like the plague. It&amp;rsquo;s simple, really: &lt;strong&gt;spend less than you make&lt;/strong&gt;. This may seem hard in a society like ours, where we are bombarded every day with &amp;ldquo;buy now, pay later&amp;rdquo; marketing messages, but if you stick to it suddenly it will become a habit.&lt;/p&gt;

&lt;h3 id=&#34;4-save-a-lot-of-money:b6c7a23b65051c4e5f37e9bb19ff35d1&#34;&gt;4. Save a Lot of Money&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Those who say that money is not important either have too much or don&amp;rsquo;t have any&lt;/strong&gt;. Money gives you flexibility and freedom. Accumulating a big chunk of cash means that you will never have to do &lt;a href=&#34;https://thebillfold.com/a-story-of-a-fuck-off-fund-648401263659#.bhrdyqcf7&#34;&gt;something you don&amp;rsquo;t want to&lt;/a&gt; because you need the money. The car broke down? Want to take that class? Want to go on that trip? Want to splurge on something really important to you? No problem, you&amp;rsquo;ve prepared for it. Just write a check. For more on this I recommend &lt;a href=&#34;http://amzn.to/1TQ0BQt&#34;&gt;Ramit Sethi&amp;rsquo;s book&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;5-learn-to-be-uncomfortable:b6c7a23b65051c4e5f37e9bb19ff35d1&#34;&gt;5. Learn To Be Uncomfortable&lt;/h3&gt;

&lt;p&gt;If you want to be free you have to &lt;strong&gt;learn to live like a college student&lt;/strong&gt;. Get used to sleeping on couches, drinking tap water, catching the bus, taking cold showers, eating simple meals, using your local library, buying used stuff, etc. You don&amp;rsquo;t have to do all these things all the time, but knowing that you can do them and still be OK will give you an edge: when you know that you don&amp;rsquo;t need a lot to live well and that you can always go somewhere else, well&amp;hellip;&lt;strong&gt;you have the power&lt;/strong&gt;. For more on this I recommend &lt;a href=&#34;http://amzn.to/1XHMBuE&#34;&gt;Mark Cuban&amp;rsquo;s book&lt;/a&gt;, especially the chapters that describe how he started out.&lt;/p&gt;

&lt;h3 id=&#34;6-lighten-your-load:b6c7a23b65051c4e5f37e9bb19ff35d1&#34;&gt;6. Lighten Your Load&lt;/h3&gt;

&lt;p&gt;Being rich in the digital age means something completely different than twenty years ago. Back then, being rich meant owning things: the McMansion, the expensive car, the boat, the fancy jewelery, the corner office, etc. All that is bullshit now. These days &lt;strong&gt;you&amp;rsquo;re considered rich when you have time, freedom, mobility and cool experiences&lt;/strong&gt;. The sharing economy has given us access to practically anything without the burden of ownership. Forget the vacation home: book an Airbnb. Thinking of buying a car? Unless you live in a sprawling city with no public transportation you don&amp;rsquo;t need to: take the train, hail an Uber or ride a bike. Corner office? Please&amp;hellip; just work out of a coffee shop or your local library. Hold on to your money (see #4) and donate/throw away the things you don&amp;rsquo;t use that are weighing you down. The ultimate aim is to fit everything you own in a carry-on bag. &lt;a href=&#34;http://www.becomingminimalist.com/millennials/&#34;&gt;Be flexible. Be mobile&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;7-always-be-learning:b6c7a23b65051c4e5f37e9bb19ff35d1&#34;&gt;7. Always Be Learning&lt;/h3&gt;

&lt;p&gt;If you think that you&amp;rsquo;re safe because you have a college degree, think again. &lt;strong&gt;Technology and the digital revolution are completely redefining professions&lt;/strong&gt; to the point that they would be unrecognizeable to somebody who has spent the last ten years in a desert island. If you have any doubts, just ask &lt;a href=&#34;https://medium.com/@knightfdn/10-basics-today-s-journalists-need-562df8787406#.bzsocpbmk&#34;&gt;journalists&lt;/a&gt;, marketers, customer service representatives, taxi drivers, and other professionals whose lives have been disrupted by technology and globalization. The good news is that &lt;a href=&#34;http://www.mariosanchez.org/post/onlineed/&#34;&gt;learning new things online&lt;/a&gt; for free or very little money is now easier than ever. You just need to have drive and curiosity. For older folks, another piece of advice: surround yourself with young people. The future is no longer being shaped by politicians or captains of industry, but by laptop-toting, tech-savvy twenty-somethings.&lt;/p&gt;

&lt;h3 id=&#34;in-summary:b6c7a23b65051c4e5f37e9bb19ff35d1&#34;&gt;In Summary&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Know what you want&lt;/li&gt;
&lt;li&gt;Be different&lt;/li&gt;
&lt;li&gt;Spend less than you make&lt;/li&gt;
&lt;li&gt;Save a lot of money&lt;/li&gt;
&lt;li&gt;Learn to be uncomfortable&lt;/li&gt;
&lt;li&gt;Lighten your load&lt;/li&gt;
&lt;li&gt;Always be learning&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&#34;https://c1.staticflickr.com/8/7210/6812971608_30001b913a_h.jpg&#34;&gt;
&lt;p class=&#34;small&#34;&gt;Photo Credits: &lt;a href=&#34;https://www.flickr.com/photos/jodimichelle/6812971608/&#34;&gt;jodimichelle&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juxtapose: JavaScript Before-and-After Visual Tool</title>
      <link>http://www.mariosanchez.org/post/juxtapose/</link>
      <pubDate>Sat, 14 May 2016 22:50:30 -0400</pubDate>
      
      <guid>http://www.mariosanchez.org/post/juxtapose/</guid>
      <description>&lt;p&gt;As content creators in the digital age, writers and journalists need to get familiar with data visualization tools. One of these tools is Juxtapose, created by &lt;a href=&#34;http://knightlab.northwestern.edu/&#34;&gt;Northwestern University Knight Lab&lt;/a&gt; using JavaScript.&lt;/p&gt;

&lt;p&gt;Juxtapose lets you highlight the &lt;em&gt;before-and-after&lt;/em&gt; aspect of your stories using a visually compelling slider graphic (you can &lt;a href=&#34;https://juxtapose.knightlab.com/&#34;&gt;make one on the app&amp;rsquo;s website&lt;/a&gt; and then just cut and embed a snippet of code on your site).&lt;/p&gt;

&lt;p&gt;I tried it myself using two selfies I took during the last World Cup, wearing the jerseys of the two finalists (lame example, I know, but think of the possibilities if you&amp;rsquo;re covering a more serious subject!)&lt;/p&gt;

&lt;iframe frameborder=&#34;0&#34; class=&#34;juxtapose&#34; width=&#34;40%&#34; height=&#34;450&#34; src=&#34;https://cdn.knightlab.com/libs/juxtapose/latest/embed/index.html?uid=b440cd8c-1a4a-11e6-a524-0e7075bba956&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;If you want to check out the Juxtapose source code it is hosted on &lt;a href=&#34;https://github.com/NUKnightLab/juxtapose&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Update: Here is a &lt;a href=&#34;http://www.telegraph.co.uk/news/2016/06/07/amazing-photos-capture-1910-great-flood-of-paris-v-2016/&#34;&gt;great example of Juxtapose&lt;/a&gt; used in news media.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Basic Git Workflow</title>
      <link>http://www.mariosanchez.org/post/gitflow/</link>
      <pubDate>Thu, 12 May 2016 18:00:39 -0400</pubDate>
      
      <guid>http://www.mariosanchez.org/post/gitflow/</guid>
      <description>

&lt;p&gt;This quick rundown portrays the basic workflow I go through when using &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; to keep track of files. It assumes you have some basic knowledge of Git. If you don&amp;rsquo;t, don&amp;rsquo;t worry, there are plenty of resources online (&lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;this is a good starting point&lt;/a&gt;). It also assumes that you are using &lt;a href=&#34;http://www.github.com&#34;&gt;Github&lt;/a&gt; for your remote repositories.&lt;/p&gt;

&lt;p&gt;Here we go.&lt;/p&gt;

&lt;h3 id=&#34;creating-a-repository-from-scratch:a603a77b1f5c5be5405a46ac8ca7dda3&#34;&gt;Creating a repository from scratch&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Open your Terminal and navigate to a folder you want to start tracking (if you don&amp;rsquo;t know how to use the Terminal this &lt;a href=&#34;https://www.codecademy.com/learn/learn-the-command-line&#34;&gt;quick online course&lt;/a&gt; will show you the basics).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type &lt;code&gt;git init&lt;/code&gt; to create a new subdirectory, called .git, where your file changes are going to be tracked.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a new file, for example one called &lt;em&gt;grocery.txt&lt;/em&gt; (a simple text file listing different grocery stores in your neighborhood) by typing &lt;code&gt;touch grocery.txt&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Open your favorite text editor, add some grocery store names and save the file.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add the file to the staging area by doing &lt;code&gt;git add grocery.txt&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Commit your changes by doing &lt;code&gt;git commit -m &amp;ldquo;MESSAGE HERE&amp;rdquo;&lt;/code&gt;. Don&amp;rsquo;t forget to type your message in between quote marks explaining what you did to the file.  Since this is the first time you commit this file it is OK to just write &amp;ldquo;initial commit&amp;rdquo;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you want to push your file to a remote repository, you need to create the remote repository first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to Github and create a new project folder where you&amp;rsquo;re going to place and track &lt;em&gt;grocery.txt&lt;/em&gt;. You can call it &lt;em&gt;new-project&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Look around the screen for the URL of the project folder you just created. It should be something like &lt;code&gt;&lt;a href=&#34;https://www.github.com/youraccount/new-project.git&#34;&gt;https://www.github.com/youraccount/new-project.git&lt;/a&gt;&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Copy that URL, go back to your terminal, and type &lt;br /&gt;&lt;code&gt;git add remote origin &lt;a href=&#34;https://www.github.com/youraccount/new-project.git&#34;&gt;https://www.github.com/youraccount/new-project.git&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push your file to the remote repository with &lt;code&gt;git push origin master&lt;/code&gt; (if at any point Github asks you for your username and password type them in).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you are tracking &lt;em&gt;grocery.txt&lt;/em&gt; both in your local repository (your computer) and a remote repository!&lt;/p&gt;

&lt;p&gt;Now, let&amp;rsquo;s say that the next day you come back to your file and add some more grocery store names. Once you&amp;rsquo;re done, do this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Save the file&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Do &lt;code&gt;git add grocery.txt&lt;/code&gt; to add the changes to the staging area, and&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;git commit -m &amp;ldquo;add grocery stores&amp;rdquo;&lt;/code&gt; to commit your changes.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To upload these changes to the remote repository simply type &lt;code&gt;git push origin master&lt;/code&gt;. Type your username and password when prompted and the changes will be uploaded.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&amp;rsquo;s it.&lt;/p&gt;

&lt;h3 id=&#34;cloning-a-remote-repository:a603a77b1f5c5be5405a46ac8ca7dda3&#34;&gt;Cloning a remote repository&lt;/h3&gt;

&lt;p&gt;Cloning a remote repository means installing a copy in your local computer. You may want to clone one of your existing remote repositories to do some work on it locally, or you may want to clone a remote repository belonging to somebody else and use it as a template for your own project. In this case, first make sure you have permission from the repository owner.&lt;/p&gt;

&lt;p&gt;This is what you do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Go to Github and follow the instructions to fork the repository to your profile.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you want to call the repository something else, just rename it as you want.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Finally, clone the repository to your local computer by going back to the terminal and typing &lt;code&gt;git clone URL OF THE REPOSITORY&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you&amp;rsquo;ve cloned the repository and done some work on it, the process is the same as when you update a local repository created from scratch: you work on your files, make some changes, add them to the staging area, commit them, and finally push them back to the remote repository with &lt;code&gt;git push origin master&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Ubuntu in an Old Laptop</title>
      <link>http://www.mariosanchez.org/post/ubuntu/</link>
      <pubDate>Sat, 30 Apr 2016 18:00:39 -0400</pubDate>
      
      <guid>http://www.mariosanchez.org/post/ubuntu/</guid>
      <description>&lt;p&gt;When the hard drive of my old Toshiba Satellite died suddenly I thought of getting rid of it, but when I learned that you could buy a refurbished hard drive on ebay for very little money (around $35) I ordered one and installed it.&lt;/p&gt;

&lt;p&gt;The clean, fresh hard drive with no OS gave me the perfect excuse to install a Linux operating system. I had heard good things about &lt;a href=&#34;http://www.ubuntu.com&#34;&gt;Ubuntu&lt;/a&gt;, with its user-friendly interface and none of the clutter that comes with a traditional Windows installation.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what I did:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;From another computer &lt;a href=&#34;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&#34;&gt;create a Ubuntu bootable USB stick&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Plug the Ubuntu USB stick in a USB port of the computer where you want to install it, and turn the computer on.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;As soon as the first screen comes up press F12 (or Escape or F2 depending on the computer you&amp;rsquo;re using). You will be taken to a menu of options where you will need to change the booting order to boot from the USB drive first (&lt;a href=&#34;http://lifehacker.com/5991848/how-to-boot-from-a-cd-or-usb-drive-on-any-pc&#34;&gt;this link&lt;/a&gt; offers a pretty good explanation of how to do it, depending on the computer you&amp;rsquo;re using).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once Ubuntu comes up on the screen, it will give you the option to try it out from the USB port or to install it in your hard drive. You can choose either one. Since I wanted to install it in my clean, empty hard drive I chose the latter. There are other things you can do, like running Ubuntu alongside Windows, but I haven&amp;rsquo;t tried them. There are plenty of tutorials online explaining alternative installations, though, if you want to do something different.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Finally, I activated the wifi connection by looking for it in the connections icon at the top right of the main window.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;My new Ubuntu installation works perfectly. It is fast and efficient, and the interface is intuitive enough that anybody can use it. Ubuntu also comes Firefox already installed, and with LibreOffice, an open source office suite compatible with Microsoft Office. That means you can open and edit files like Word documents, Excel spreadsheets and PowerPoint presentations and share them with other users quickly and easily.&lt;/p&gt;

&lt;p&gt;Overall, I am very happy that my old laptop got a new lease of life, and that installing (and using) the free and open source Ubuntu on it was easy and painless.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.mariosanchez.org/../images/ubuntu.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;Related: &lt;a href=&#34;http://evbogue.com/decentdevcomputer/&#34;&gt;How to Get a Decent Dev Computer&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Technology and the Future of Education</title>
      <link>http://www.mariosanchez.org/post/onlineed/</link>
      <pubDate>Sat, 23 Jan 2016 12:53:56 -0500</pubDate>
      
      <guid>http://www.mariosanchez.org/post/onlineed/</guid>
      <description>

&lt;p&gt;Following one of &lt;a href=&#34;http://www.mariosanchez.org/post/3words16/&#34;&gt;my themes for 2016&lt;/a&gt; I recently started learning Javascript. Rather than using a book I signed up to Treehouse, an online platform that specializes in teaching how to code.  After using the site for a few days I am now able to better understand how technology can help solve the problem of the skyrocketing cost of today&amp;rsquo;s higher education:&lt;/p&gt;

&lt;h3 id=&#34;1-scale&#34;&gt;1. Scale&lt;/h3&gt;

&lt;p&gt;The economies of scale achieved through technology have dramatically reduced the cost of education delivery. While courses in bricks-and-mortar schools can cost thousands of dollars, you can take unlimited classes online for less than $50 a month. Think of the savings this represents over the four years of a typical college education. If colleges and universities are investing in real estate instead of technology they&amp;rsquo;re making a big mistake.&lt;/p&gt;

&lt;h3 id=&#34;2-lesson-delivery&#34;&gt;2. Lesson Delivery&lt;/h3&gt;

&lt;p&gt;While some people will always prefer face to face lessons, the advantages of video are hard to ignore. For one, cost: why pay somebody to deliver the same lesson over and over again, when you can just capture it on video, once?  Today&amp;rsquo;s educational videos are highly optimized pieces of content where everything, from the instructor&amp;rsquo;s tone of voice, to the words chosen to explain the concepts, to the infographics used as teaching aids, and even the backround decor, have been thoroughly tested to provide the most effective learning experience. A video can also reach millions, not just the number of students that fit in a typical classroom. You can also rewind a video at your leisure, watch it as many times as you want, when you want, wherever you may be.&lt;/p&gt;

&lt;h3 id=&#34;3-socialization-and-interaction&#34;&gt;3. Socialization and Interaction&lt;/h3&gt;

&lt;p&gt;Proponents of traditional education may argue that campus life enables students to interact, socialize and make connections.  The same, however, can be achieved through online education. While the interaction may not always be face to face, online tools like forums, social networks, and email let us be in contact with peers, ask questions, and give and get help. Students can also research their local scene for meetups where like-minded people can get together to discuss any topic, exchange ideas, and socialize.&lt;/p&gt;

&lt;h3 id=&#34;4-pace-and-rewards&#34;&gt;4. Pace and Rewards&lt;/h3&gt;

&lt;p&gt;Online schools are pioneers of the &lt;em&gt;gamification&lt;/em&gt; of education. They break down subjects into bite-sized lessons and give out points when a student completes them. Successfully passing a course or track earns them a badge. These achievements are then listed in the student&amp;rsquo;s profile, for bragging rights and motivation. Online teaching platforms are succeeding in making education fun, by providing a learning environment that resonates with digital natives, used to instant gratification and fast feedback loops. Traditional institutions, on the other hand, mostly follow the rigid set of rythms, timelines and processes of the industrial age.&lt;/p&gt;

&lt;h3 id=&#34;5-skills-versus-credentials&#34;&gt;5. Skills versus Credentials&lt;/h3&gt;

&lt;p&gt;Providing a credential is one of the few considerations where traditional education may still come out ahead. I believe, however, that as the cost of traditional education gets higher and less people are willing to mortgage their lives in exchange for a diploma, more employers will have to adapt and get with the times. I also envision the talent pool getting bigger and competition stronger, which will devalue credentials in favor of skills and experience. Those who hone their skills working on intersting projects will be more valuable than those who just hide behind a piece of paper.&lt;/p&gt;

&lt;p&gt;While I may be overemphasizing the virtues of online education based on my recent (and limited) experience, it is undeniable that traditional education is being &lt;a href=&#34;http://www.economist.com/news/briefing/21605899-staid-higher-education-business-about-experience-welcome-earthquake-digital&#34;&gt;disrupted&lt;/a&gt;, and that technology and the Internet will become the preferred media for &lt;a href=&#34;https://en.wikipedia.org/wiki/Massive_open_online_course&#34;&gt;education delivery in the future&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How To Create a Minimal Hugo Site</title>
      <link>http://www.mariosanchez.org/post/minimalhugo/</link>
      <pubDate>Wed, 23 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.mariosanchez.org/post/minimalhugo/</guid>
      <description>

&lt;p&gt;These are the instructions to create a minimal, functional Hugo site. For more information read the &lt;a href=&#34;http://gohugo.io/overview/introduction/&#34;&gt;Hugo Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;download-hugo:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Download Hugo&lt;/h4&gt;

&lt;p&gt;You can download Hugo for many different platforms from the &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo site&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;copy-hugo-exe-on-a-working-folder:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Copy hugo.exe on a working folder&lt;/h4&gt;

&lt;p&gt;Create a folder (you can name it /projects/) under your root, and then navigate to that folder by typing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd projects&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;create-a-new-hugo-site-in-a-subfolder-of-projects-called-projecthugo:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Create a new Hugo site in a subfolder of /projects called /projecthugo&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;hugo new site ~/projects/projecthugo/&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;go-to-your-hugo-site-folder:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Go to your Hugo site folder&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;cd projecthugo&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;list-the-contents-of-the-projecthugo-folder:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;List the contents of the /projecthugo folder&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should now see a skeleton with the basic structure of a Hugo site but no content or any of the folders or files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;archetypes  config.toml content layouts static data&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;install-hugo-in-your-path:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Install Hugo in your path.&lt;/h4&gt;

&lt;p&gt;Copy the hugo.exe into your /projecthugo folder.&lt;/p&gt;

&lt;p&gt;Do &lt;pre&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;again and you should now see the hugo executable:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;archetypes  config.toml content layouts static data hugo.exe&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;create-some-posts:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Create some posts&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;hugo new post/post1.md&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open post1.md with your favorite text editor and you will see three fields already pre-written in the top section of the file, called &amp;ldquo;front matter&amp;rdquo; (between the +++ marks). By default, Hugo includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;Date and&lt;/li&gt;
&lt;li&gt;Draft&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can add more parameters later (like Categories or Tags).&lt;/p&gt;

&lt;p&gt;Hugo will match the title of your post with your post file name, so if you want to call it something different just replace the text between quotes in the Title field in the front matter.&lt;/p&gt;

&lt;p&gt;Now you can write some content below the second +++ line (leave one or two lines blank at the beginning).&lt;/p&gt;

&lt;p&gt;If you want your post to go live remember to change &lt;pre&gt;&lt;code&gt;draft = true&lt;/pre&gt;&lt;/code&gt; for &lt;pre&gt;&lt;code&gt;draft = false&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;If you keep it as draft your post will not show on your site.&lt;/p&gt;

&lt;p&gt;Create another post called post2.md following a similar process.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;create-a-couple-of-pages-that-are-not-posts:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Create a couple of pages that are not posts&lt;/h3&gt;

&lt;p&gt;These would be pages like &lt;strong&gt;about&lt;/strong&gt; or &lt;strong&gt;contact&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new about.md&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new contact.md&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open your favorite text editor and create some content for about.md and contact.md&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;create-default-templates:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Create _default templates&lt;/h4&gt;

&lt;p&gt;You will create four templates and place them in a folder called /layouts/_default:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;single.html&lt;/li&gt;
&lt;li&gt;list.html&lt;/li&gt;
&lt;li&gt;summary.html&lt;/li&gt;

&lt;li&gt;&lt;p&gt;li.html&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Single is for your individual content (e.g. posts or pages)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;List is for a list of posts.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Summary and li are views that will be used in your list template, depending if you just want a list of posts titles or a summary of each post in addition to the title.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Hugo documentation provides instructions on what code to use in each of them.&lt;/p&gt;

&lt;p&gt;You can create section specific templates if your site is larger but for now _default templates are all we need.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;create-partial-templates:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Create partial templates&lt;/h4&gt;

&lt;p&gt;These are good for the common areas of your site. Go ahead and create:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;header.html (must include a link to the style sheet and the site&amp;rsquo;s navigation)&lt;/li&gt;
&lt;li&gt;footer.html (for copyright or similar info)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Place these templates in a folder called /layouts/partials/. These partial templates can be called from any other template (for example from single.hmtl or list.html) by simply using the following code within those templates:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ partial &#34;header.html&#34; . }}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ partial &#34;footer.html&#34; . }}&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;create-an-index-html-template:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Create an index.html template&lt;/h4&gt;

&lt;p&gt;This template is only used for the home page. Create it however you want your home page to look and place it in the root of the /layouts folder.  You can also choose to use a list of posts as your index page. In that case just save the list template as index.html&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;create-a-static-css-folder-and-upload-a-style-sheet:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Create a /static/css folder and upload a style sheet.&lt;/h4&gt;

&lt;p&gt;Don&amp;rsquo;t forget to link to the style sheet from the header.html partial template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;http://www.mariosanchez.org/css/style.css&#34;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You need to include the above code between &amp;lt;&amp;gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;create-a-static-images-folder-and-upload-some-images:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Create a /static/images folder and upload some images.&lt;/h4&gt;

&lt;p&gt;Self explanatory.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;update-your-config-toml-file:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Update your config.toml file&lt;/h4&gt;

&lt;p&gt;Just add the URL of your site and your site&amp;rsquo;s description. That&amp;rsquo;s all you&amp;rsquo;re going to need to start. You can add more parameters later.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;try-out-your-site:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Try out your site&lt;/h4&gt;

&lt;p&gt;Once you have created content and templates it&amp;rsquo;s time to view your site. Type the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server -w&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If everything went well Hugo will generate your website and you will be able to see it at &lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt; .&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;get-your-site-ready-to-upload:ed927200c6ae8a82148fa4c8d182d7fd&#34;&gt;Get your site ready to upload&lt;/h4&gt;

&lt;p&gt;Once you&amp;rsquo;re satisfied with the way your site looks, run the hugo command by itself:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are now ready to upload or git push your site to your web hosting service. Your site files will be in a folder called /public.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t want to start from scratch, I have created a Minimal Hugo Site and git pushed the &lt;a href=&#34;https://github.com/mariobox/MinimalHugoSite&#34;&gt;source code&lt;/a&gt; to Github.&lt;/p&gt;

&lt;p&gt;You can simply clone the repository by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/mariobox/MinimalHugoSite.git&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is a &lt;a href=&#34;http://www.mariosanchez.org/minimalhugodemo/&#34;&gt;live demo&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>